#!/usr/bin/env python3
import logging
import gi
import os
import signal
import sys
gi.require_version('Gst', '1.0')
gi.require_version('GLib', '2.0')
from gi.repository import Gst
from gi.repository import GLib


LIBDIR = "@LIBDIR@"
_logger = logging.getLogger(__name__)


def _add_hack_sound_server_path():
    path = os.path.join(LIBDIR, "hack-sound-server", "python")
    if path not in sys.path:
        sys.path.append(path)


def _run_server():
    from hack_sound_server.server import HackSoundPlayer
    from hack_sound_server.server import HackSoundServer
    from hack_sound_server.utils.metadata import read_and_parse_metadata

    Gst.init(None)
    metadata = read_and_parse_metadata()
    if metadata is None:
        _logger.critical("Cannot load metadata.")
        sys.exit(1)

    server = HackSoundServer(metadata)
    GLib.unix_signal_add(GLib.PRIORITY_DEFAULT, signal.SIGINT, server.quit)
    GLib.unix_signal_add(GLib.PRIORITY_DEFAULT, signal.SIGTERM, server.release)
    server.run(None)


if __name__ == "__main__":
    _add_hack_sound_server_path()
    _run_server()
