#!/usr/bin/env python3
import argparse
import gi
import os
import signal
import sys
gi.require_version('Gst', '1.0')
gi.require_version('GLib', '2.0')
from gi.repository import Gst  # noqa
from gi.repository import GLib  # noqa


LIBDIR = "@LIBDIR@"


def _add_hack_sound_server_path():
    path = os.path.join(LIBDIR, "hack-sound-server", "python")
    if path not in sys.path:
        sys.path.append(path)


def _run_server():
    if args.api_version == 2:
        from hack_sound_server.v2.server import Server
    else:
        from hack_sound_server.server import Server
    from hack_sound_server.utils.loggable import logger
    from hack_sound_server.utils.metadata import read_and_parse_metadata

    Gst.init(None)
    metadata = read_and_parse_metadata()
    if metadata is None:
        logger.critical("Cannot load metadata.")
        sys.exit(1)

    server = Server(metadata)
    GLib.unix_signal_add(GLib.PRIORITY_DEFAULT, signal.SIGINT, server.quit)
    GLib.unix_signal_add(GLib.PRIORITY_DEFAULT, signal.SIGTERM, server.release)
    server.run(None)


if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument("--api-version", type=int, choices=[1, 2], default=1,
                        required=False)
    args = parser.parse_args()

    _add_hack_sound_server_path()
    _run_server()
